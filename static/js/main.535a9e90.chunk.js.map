{"version":3,"sources":["../node_modules/peerjs/dist sync","components/App.js","components/Message.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","con","Message","sender","body","className","App","useState","peer","setPeer","connected","setConnected","setId","me","setMe","setBody","messages","setMessages","useEffect","myId","nameGenerator","words","number","dashed","Peer","on","conn","msg","msgs","handleChange","useCallback","event","target","value","name","handleKeyPress","charCode","connect","send","type","placeholder","onKeyPress","onChange","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.535a9e90.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 16;","import Peer from 'peerjs'\nimport { useState, useCallback, useEffect } from 'react'\nimport nameGenerator from 'project-name-generator'\nimport Message from './Message'\n\nlet con\n\nfunction App() {\n  const [peer, setPeer] = useState()\n  const [connected, setConnected] = useState(false)\n  const [id, setId] = useState('')\n  const [me, setMe] = useState('')\n  const [body, setBody] = useState('')\n  const [messages, setMessages] = useState([])\n  useEffect(() => {\n    const myId = nameGenerator({ words: 3, number: true}).dashed\n    const peer = new Peer(myId)\n    setPeer(peer)\n    peer.on('connection', (conn) => {\n      setId(conn.peer)\n      conn.on('data', (body) => {\n        const msg = {\n          sender: conn.peer,\n          body,\n        }\n        setMessages((msgs) => [...msgs, msg])\n      })\n      con = conn\n      setConnected(true)\n    })\n    peer.on('open', () => {\n      setMe(peer.id)\n    })\n  }, [])\n  const handleChange = useCallback((event) => {\n    const { value, name } = event.target\n    if (name === 'id') {\n      setId(value)\n    } else if (name === 'msg') {\n      setBody(value)\n    }\n  }, [])\n  const handleKeyPress = useCallback((event) => {\n    if (event.charCode === 13) {\n      if (event.target.name === 'id') {\n        con = peer.connect(id)\n        con.on('data', (body) => {\n          const msg = {\n            sender: id,\n            body,\n          }\n          setMessages((msgs) => [...msgs, msg])\n        })\n        setConnected(true)\n      } else {\n        con.send(body)\n        setBody('')\n        const msg = {\n          sender: 'me',\n          body,\n        }\n        setMessages((msgs) => [...msgs, msg])\n      }\n    }\n  }, [id, peer, body, setBody])\n  return (\n    <div className=\"App\">\n      {connected\n        ? (\n          <h4>Connected!</h4>\n        )\n        : (\n          <div className=\"connection\">\n            <h2>Me</h2>\n            {me}\n            <h2>Connection</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Peer ID\"\n              name=\"id\" \n              value={id} \n              onKeyPress={handleKeyPress} \n              onChange={handleChange} \n            />\n          </div>\n        )\n      }\n      <div className=\"messages\">\n        <h2>Messages</h2>\n        {messages.map((msg, index) => \n          <Message key={index} {...msg} />\n        )}\n      </div>\n      <input\n        placeholder=\"Message\"\n        name=\"msg\" type=\"text\"\n        value={body}\n        onKeyPress={handleKeyPress}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nexport default App\n","export default function Message({ sender, body }) {\n  return (\n    <div className=\"message\">\n      <div className=\"sender\">\n        {sender}\n      </div>\n      <div className=\"body\">\n        {body}\n      </div>\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}